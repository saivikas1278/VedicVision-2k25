import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { FaArrowLeft } from 'react-icons/fa';
import { GiCricketBat, GiVolleyballBall, GiSoccerKick, GiRunningNinja } from 'react-icons/gi';
import { MdSportsTennis } from 'react-icons/md';
import { IoCalendarOutline } from 'react-icons/io5';

const NutritionTracker = () => {
  const navigate = useNavigate();
  const [selectedSport, setSelectedSport] = useState('cricket');
  const [selectedSeason, setSelectedSeason] = useState('offseason');

  const cricketNutrition = {
    offseason: [
      {
        category: "Lean Protein",
        foods: [
          {
            name: "Grilled Chicken Breast",
            image: "/images/nutrition/chicken.jpg",
            description: "Muscle repair & growth (maintains lean mass while training volume is lower)"
          },
          {
            name: "Greek Yogurt",
            image: "/images/nutrition/greek-yogurt.jpg",
            description: "Muscle repair & growth (maintains lean mass while training volume is lower)"
          },
          {
            name: "Eggs",
            image: "/images/nutrition/eggs.jpg",
            description: "Muscle repair & growth (maintains lean mass while training volume is lower)"
          }
        ]
      },
      {
        category: "Complex Carbs",
        foods: [
          {
            name: "Brown Rice",
            image: "/images/nutrition/brownrice.jpg",
            description: "Steady energy for gym work & skill sessions without fat gain"
          },
          {
            name: "Quinoa",
            image: "/images/nutrition/quinoa.jpg",
            description: "Steady energy for gym work & skill sessions without fat gain"
          },
          {
            name: "Sweet Potatoes",
            image: "/images/nutrition/sweet-potato.jpg",
            description: "Steady energy for gym work & skill sessions without fat gain"
          }
        ]
      },
      {
        category: "Healthy Fats",
        foods: [
          {
            name: "Avocado",
            image: "/images/nutrition/avacado.webp",
            description: "Joint health & hormone balance"
          },
          {
            name: "Mixed Nuts",
            image: "/images/nutrition/trail-mix.jpg",
            description: "Joint health & hormone balance"
          }
        ]
      },
      {
        category: "Fruits & Veggies",
        foods: [
          {
            name: "Mixed Berries",
            image: "/images/nutrition/berries.jpg",
            description: "Antioxidants to aid recovery & immunity"
          },
          {
            name: "Broccoli",
            image: "/images/nutrition/brocli.jpg",
            description: "Antioxidants to aid recovery & immunity"
          }
        ]
      },
      {
        category: "Hydration & Supplements",
        foods: [
          {
            name: "Green Tea",
            image: "/images/nutrition/green-tea.jpg",
            description: "Supports muscle function & digestion"
          },
          {
            name: "Protein Shake",
            image: "/images/nutrition/protein-shake.jpg",
            description: "Fills nutritional gaps"
          }
        ]
      }
    ]
  };

  const seasons = [
    { id: 'offseason', name: 'Off Season', icon: <IoCalendarOutline className="w-6 h-6" /> },
    { id: 'onseason', name: 'On Season', icon: <IoCalendarOutline className="w-6 h-6" /> }
  ];

  const sports = [
    { id: 'cricket', name: 'Cricket', icon: <GiCricketBat className="w-6 h-6" /> },
    { id: 'badminton', name: 'Badminton', icon: <MdSportsTennis className="w-6 h-6" /> },
    { id: 'football', name: 'Football', icon: <GiSoccerKick className="w-6 h-6" /> },
    { id: 'volleyball', name: 'Volleyball', icon: <GiVolleyballBall className="w-6 h-6" /> },
    { id: 'kabaddi', name: 'Kabaddi', icon: <GiRunningNinja className="w-6 h-6" /> }
  ];

  const nutritionData = [
    {
      name: "Oatmeal with Honey",
      image: "/images/nutrition/oatmeal.jpg",
      description: "Complex carbs for sustained energy throughout the day."
    },
    {
      name: "Bananas",
      image: "/images/nutrition/banana.jpg",
      description: "Quick energy and potassium for muscle function."
    },
    {
      name: "Salmon",
      image: "/images/nutrition/salmon.jpg",
      description: "Omega-3 rich protein for heart and brain health."
    },
    {
      name: "Lean Beef",
      image: "/images/nutrition/beef.jpg",
      description: "Iron-rich protein for muscle strength."
    }
  ];

  return (
    <div className="min-h-screen bg-[#1a1b26] text-white">
      <div className="container mx-auto px-4 py-8">
        {/* Header */}
        <div className="mb-8 flex items-center">
          <button 
            onClick={() => navigate('/fitness')}
            className="mr-4 text-gray-400 hover:text-white transition-colors"
            aria-label="Go back"
          >
            <FaArrowLeft size={20} />
          </button>
          <h1 className="text-2xl font-bold">Sports Nutrition Guide</h1>
        </div>

        <div className="flex flex-col md:flex-row gap-6">
          {/* Sidebar */}
          <div className="md:w-64 flex-shrink-0">
            <div className="bg-[#24283b] rounded-xl shadow-lg p-4">
              <h2 className="text-xl font-semibold mb-4 px-2">Sports</h2>
              <nav className="space-y-1">
                {sports.map((sport) => (
                  <button
                    key={sport.id}
                    onClick={() => setSelectedSport(sport.id)}
                    className={
                      selectedSport === sport.id
                        ? "w-full flex items-center px-4 py-3 rounded-lg transition-colors bg-blue-600 text-white"
                        : "w-full flex items-center px-4 py-3 rounded-lg transition-colors text-gray-300 hover:bg-[#1a1b26] hover:text-white"
                    }
                  >
                    <span className="mr-3">{sport.icon}</span>
                    <span className="font-medium">{sport.name}</span>
                  </button>
                ))}
              </nav>
            </div>
          </div>

          {/* Main Content */}
          <main className="flex-1">
            <div className="bg-[#24283b] rounded-xl shadow-lg p-6">
              <h2 className="text-xl font-semibold mb-6">Essential Sports Nutrition</h2>
              
              {selectedSport === 'cricket' ? (
                <div className="mb-6">
                  <div className="flex space-x-4 mb-6">
                    {seasons.map((season) => (
                      <button
                        key={season.id}
                        onClick={() => setSelectedSeason(season.id)}
                        className={`flex items-center px-4 py-2 rounded-lg transition-colors ${
                          selectedSeason === season.id
                            ? 'bg-blue-600 text-white'
                            : 'bg-[#1a1b26] text-gray-300 hover:bg-opacity-80 hover:text-white'
                        }`}
                      >
                        <span className="mr-2">{season.icon}</span>
                        <span className="font-medium">{season.name}</span>
                      </button>
                    ))}
                  </div>
                  
                  {selectedSeason === 'offseason' ? (
                    <div className="space-y-8">
                      {cricketNutrition.offseason.map((group, groupIndex) => (
                        <div key={groupIndex} className="space-y-4">
                          <h3 className="text-lg font-semibold text-blue-400">{group.category}</h3>
                          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            {group.foods.map((food, index) => (
                              <div key={index} className="bg-[#1a1b26] rounded-lg overflow-hidden shadow-lg transition-transform hover:scale-105">
                                <div className="h-48 overflow-hidden">
                                  <img
                                    src={food.image}
                                    alt={food.name}
                                    className="w-full h-full object-cover"
                                  />
                                </div>
                                <div className="p-4">
                                  <h3 className="text-lg font-semibold mb-2 text-white">{food.name}</h3>
                                  <p className="text-gray-400 text-sm">{food.description}</p>
                                </div>
                              </div>
                            ))}
                          </div>
                        </div>
                      ))}
                    </div>
                  ) : (
                    <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                      {nutritionData.map((food, index) => (
                        <div key={index} className="bg-[#1a1b26] rounded-lg overflow-hidden shadow-lg transition-transform hover:scale-105">
                          <div className="h-48 overflow-hidden">
                            <img
                              src={food.image}
                              alt={food.name}
                              className="w-full h-full object-cover"
                            />
                          </div>
                          <div className="p-4">
                            <h3 className="text-lg font-semibold mb-2 text-white">{food.name}</h3>
                            <p className="text-gray-400 text-sm">{food.description}</p>
                          </div>
                        </div>
                      ))}
                    </div>
                  )}
                </div>
              ) : (
                <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                  {nutritionData.map((food, index) => (
                    <div key={index} className="bg-[#1a1b26] rounded-lg overflow-hidden shadow-lg transition-transform hover:scale-105">
                      <div className="h-48 overflow-hidden">
                        <img
                          src={food.image}
                          alt={food.name}
                          className="w-full h-full object-cover"
                        />
                      </div>
                      <div className="p-4">
                        <h3 className="text-lg font-semibold mb-2 text-white">{food.name}</h3>
                        <p className="text-gray-400 text-sm">{food.description}</p>
                      </div>
                    </div>
                  ))}
                </div>
              )}
            </div>
          </main>
        </div>
      </div>
    </div>
  );
};

export default NutritionTracker;
